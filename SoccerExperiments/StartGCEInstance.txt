# ----------------------------------------------------------
# Steps to run experiments on Google Compute Engine instance
# ----------------------------------------------------------

# Connect to Virtual Machine using SSH
gcloud compute ssh instance-for-ml-agents --zone="us-central1-c" --project="master-thesis-456789"
gcloud compute ssh duplicate-for-ml-agents --zone="us-west1-c" --project="master-thesis-456789"


# Delete old experiment files
rm -r -f StartTrainingOnGCE.sh
rm -r -f nohup.out
rm -r -f -d models
rm -r -f -d summaries
rm -r -f -d master-thesis

# Transfer StartTrainingOnGCE.sh file to server (RUN ON ANOTHER TERMINAL WINDOW)
gcloud compute scp --recurse /Users/rsaenz/Documents/Projects/master-thesis/SoccerExperiments/StartTrainingOnGCE.sh instance-for-ml-agents:/home/rsaenz/ --zone="us-central1-c" --project="master-thesis-456789"
gcloud compute scp --recurse /Users/rsaenz/Documents/Projects/master-thesis/SoccerExperiments/StartTrainingOnGCE.sh duplicate-for-ml-agents:/home/rsaenz/ --zone="us-west1-c" --project="master-thesis-456789"

# Verify StartTrainingOnGCE.sh content
cat StartTrainingOnGCE.sh

# Make .sh file executable
chmod +x StartTrainingOnGCE.sh

# Run .sh file independenly of SSH connection
nohup ./StartTrainingOnGCE.sh &

# Monitor log file
tail -f nohup.out

# Check if sh file is running
ps aux | grep "StartTrainingOnGCE.sh"


---------------------------


# Connect to my macbook
ssh rsaenzi@MacBook-Pro-Rigoberto.local
cd Documents/Projects/master-thesis/SoccerExperiments
tail -f nohup.out
	Control+D to close connection


---------------------------

sudo python3 -m pip install --upgrade pip

sudo python3 -m pip install tensorflow
sudo python3 -m pip install --upgrade ipython
sudo python3 -m pip install --upgrade google-colab
sudo python3 -m pip install --upgrade prompt-toolkit
sudo python3 -m pip install --upgrade google-auth
sudo python3 -m pip install --upgrade nvidia-smi
sudo python3 -m pip install --upgrade tensorflow
sudo python3 -m pip install --upgrade tensorboard
sudo python3 -m pip install --upgrade tensorboardcolab
sudo python3 -m pip install --upgrade keras
sudo python3 -m pip install --upgrade psutil
sudo python3 -m pip install --upgrade setuptools
sudo python3 -m pip install --upgrade mlagents==0.16.1


sudo pip install mlagents

sudo apt -qq update
sudo apt -qq install npm
sudo apt -qq install xvfb
sudo apt -qq install libgconf-2-4
sudo apt -qq install gconf-service lib32gcc1 lib32stdc++6 libasound2 libc6 libc6-i386 libcairo2 libcap2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libfreetype6 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libgl1-mesa-glx libglib2.0-0 libglu1-mesa libgtk2.0-0 libnspr4 libnss3 libpango1.0-0 libstdc++6 libx11-6 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxtst6 zlib1g debconf
sudo apt -qq install nodejs-dev node-gyp libssl1.0-dev

sudo apt-get update
sudo apt-get install pulseaudio
sudo apt-get install libarchive-tools
sudo apt-get install libgtk-3-dev

sudo ./UnityInstaller --unattended --components=Unity --install-location=/opt/Editor/Unity

cd /opt/Editor/Unity/Editor
sudo ./Unity -nographics -logFile -batchmode -createManualActivationFile

mv Unity_v2019.1.0f2.alf /home/rsaenz
mv Unity_v2019.1.0f2.alf UnityRequest.alf
gcloud compute scp --recurse duplicate-for-ml-agents:/home/rsaenz/UnityRequest.alf /Users/rsaenz/Desktop --zone="us-west1-c" --project="master-thesis-456789"

# Activation fails if the licence request file has a different name than the original, so must be reverted back

gcloud compute scp --recurse /Users/rsaenz/Desktop/UnityLicence.ulf duplicate-for-ml-agents:/home/rsaenz/ --zone="us-west1-c" --project="master-thesis-456789"

sudo cp -r "UnityLicence.ulf"  "/opt/Editor/Unity/Editor"

sudo ./Unity -nographics -logFile -batchmode -manualLicenseFile UnityLicense.ulf

gcloud compute scp --recurse /Users/rsaenz/Documents/Projects/master-thesis/SoccerExperiments/StartTrainingOnGCE.sh duplicate-for-ml-agents:/home/rsaenz/


---------------------------


# Delete previous files
rm -r -f -d models
rm -r -f -d summaries
rm -r -f -d master-thesis

# Download master-thesis
git clone -b master https://github.com/rsaenzi/master-thesis.git

# Test ml-agents
mlagents-learn -h

# Run experiments
mlagents-learn 'master-thesis/SoccerExperiments/TrainingConfigPPO.yaml' --env='master-thesis/SoccerExperiments/builds/linux/Linux_v11_4fields.x86_64' --run-id=PPO_CurriculaA --num-envs 1 --curriculum 'master-thesis/SoccerExperiments/TrainingCurriculaA.yaml' --no-graphics --force

# Get experiments (run on other terminal windows that has not a ssh open connection)
gcloud compute scp --recurse instance-for-ml-agents:/home/rsaenz/models /Users/rsaenz/Desktop/Experiments_PPO_CurriculaA
gcloud compute scp --recurse instance-for-ml-agents:/home/rsaenz/summaries /Users/rsaenz/Desktop/Experiments_PPO_CurriculaA

# Launch Jupyter Notebooks web client
jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser &

# Open Jupyter Notebook web client
http://104.154.139.227:8888/
http://104.154.139.227:8888/?token=37536be81c20f363915649de2e3c8e9552c32216fcb7e925

# Create SSH key
cd /home/rsaenz/.ssh/
ssh-keygen -t rsa -f ~/.ssh/ssh_key_compute_engine -C rsaenz
cat ssh_key_compute_engine.pub

# To edit a file
vim /etc/vsftpd.conf

# Install Unity
sudo ./UnityInstaller --unattended --components=Unity --install-location=/opt/Editor/Unity

# Copy license file
cp /home/rsaenz/UnityLicense.x.ulf /opt/Editor/Unity/Editor

# Move license file
mv 'Unity_v2019.1.0f2.alf' '/home/rsaenz/'

# Add Unity to project path
# Run 'cd /opt/Editor/Unity/Editor; ./Unity'
export PATH=$PATH:/opt/Editor/Unity/Editor
export PATH=$PATH:/usr/local/lib/python3.7/
echo $PATH

# Request license
./Unity -nographics -logFile -batchmode -createManualActivationFile

# Install license
./Unity -nographics -logFile -batchmode -manualLicenseFile '/home/rsaenz/UnityLicense.x.ulf'

# Open Project (Update API)
Unity -nographics -logFile -batchmode -accept-apiupdate -buildTarget Linux64 -projectPath '/master-thesis/SoccerAcademy' -quit

# Build Project
Unity -nographics -logFile -batchmode -buildTarget Linux64 -buildLinux64Player 'SoccerAcademy.x86_64' -quit

# Run experiments
mlagents-learn 'master-thesis/SoccerExperiments/TrainingConfigPPO.yaml' --env='master-thesis/SoccerExperiments/builds/linux/Linux_v11_4fields.x86_64' --run-id=PPO_curriculaA_test --num-envs 1 --curriculum 'master-thesis/SoccerExperiments/TrainingCurriculaA.yaml' --no-graphics --force
